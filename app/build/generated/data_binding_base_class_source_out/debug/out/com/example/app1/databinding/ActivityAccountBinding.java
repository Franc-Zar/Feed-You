// Generated by view binder compiler. Do not edit!
package com.example.app1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app1.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView blockedSources;

  @NonNull
  public final TextView decorationMenu;

  @NonNull
  public final Button googleLogin;

  @NonNull
  public final TextView inviteFriends;

  @NonNull
  public final TextView themes;

  @NonNull
  public final MaterialToolbar toolbarAccount;

  @NonNull
  public final Button twitterLogin;

  private ActivityAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView blockedSources, @NonNull TextView decorationMenu,
      @NonNull Button googleLogin, @NonNull TextView inviteFriends, @NonNull TextView themes,
      @NonNull MaterialToolbar toolbarAccount, @NonNull Button twitterLogin) {
    this.rootView = rootView;
    this.blockedSources = blockedSources;
    this.decorationMenu = decorationMenu;
    this.googleLogin = googleLogin;
    this.inviteFriends = inviteFriends;
    this.themes = themes;
    this.toolbarAccount = toolbarAccount;
    this.twitterLogin = twitterLogin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blocked_sources;
      TextView blockedSources = ViewBindings.findChildViewById(rootView, id);
      if (blockedSources == null) {
        break missingId;
      }

      id = R.id.decoration_menu;
      TextView decorationMenu = ViewBindings.findChildViewById(rootView, id);
      if (decorationMenu == null) {
        break missingId;
      }

      id = R.id.google_login;
      Button googleLogin = ViewBindings.findChildViewById(rootView, id);
      if (googleLogin == null) {
        break missingId;
      }

      id = R.id.invite_friends;
      TextView inviteFriends = ViewBindings.findChildViewById(rootView, id);
      if (inviteFriends == null) {
        break missingId;
      }

      id = R.id.themes;
      TextView themes = ViewBindings.findChildViewById(rootView, id);
      if (themes == null) {
        break missingId;
      }

      id = R.id.toolbar_account;
      MaterialToolbar toolbarAccount = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAccount == null) {
        break missingId;
      }

      id = R.id.twitter_login;
      Button twitterLogin = ViewBindings.findChildViewById(rootView, id);
      if (twitterLogin == null) {
        break missingId;
      }

      return new ActivityAccountBinding((ConstraintLayout) rootView, blockedSources, decorationMenu,
          googleLogin, inviteFriends, themes, toolbarAccount, twitterLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
