// Generated by view binder compiler. Do not edit!
package com.example.app1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RvRowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ConstraintLayout cvLayout;

  @NonNull
  public final CardView cvNews;

  @NonNull
  public final ImageView ivFavicon;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvTitle;

  private RvRowBinding(@NonNull CardView rootView, @NonNull ConstraintLayout cvLayout,
      @NonNull CardView cvNews, @NonNull ImageView ivFavicon, @NonNull TextView tvCategory,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.cvLayout = cvLayout;
    this.cvNews = cvNews;
    this.ivFavicon = ivFavicon;
    this.tvCategory = tvCategory;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RvRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RvRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.rv_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RvRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_layout;
      ConstraintLayout cvLayout = ViewBindings.findChildViewById(rootView, id);
      if (cvLayout == null) {
        break missingId;
      }

      CardView cvNews = (CardView) rootView;

      id = R.id.iv_favicon;
      ImageView ivFavicon = ViewBindings.findChildViewById(rootView, id);
      if (ivFavicon == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new RvRowBinding((CardView) rootView, cvLayout, cvNews, ivFavicon, tvCategory,
          tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
